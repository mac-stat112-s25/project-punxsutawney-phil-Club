[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "The Truth Behind Groundhog Accuracy: A Data-Driven Study",
    "section": "",
    "text": "1 Report",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Report</span>"
    ]
  },
  {
    "objectID": "index.html#background-information",
    "href": "index.html#background-information",
    "title": "The Truth Behind Groundhog Accuracy: A Data-Driven Study",
    "section": "\n1.1 Background Information",
    "text": "1.1 Background Information\nGroundhog Day is a tradition where a groundhog predicts the arrival of spring by observing its shadow, celebrated annually on February 2nd with excitement and cultural significance.\n\n\n1.1.1 What the Groundhog Prediction means?\nShadow Means Winter Continues If the groundhog sees its shadow, winter lasts six more weeks.\nNo Shadow Means an Early Spring If no shadow is seen, spring arrives early.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Report</span>"
    ]
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "The Truth Behind Groundhog Accuracy: A Data-Driven Study",
    "section": "\n1.2 Introduction",
    "text": "1.2 Introduction\nOur analysis focuses on the longstanding weather prediction using groundhogs. We are curious to explore how effective groundhogs actually are in making predictions of weather. Groundhog Day, which is the event our research is based on, is a tradition where a groundhog predicts the arrival of spring by observing its shadow, celebrated annually with excitement and cultural significance. Our findings provide an interesting perspective on how the type of groundhog plays a significant role in accuracy of predictions and how this could potentially inform future predictions.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Report</span>"
    ]
  },
  {
    "objectID": "index.html#data-collection",
    "href": "index.html#data-collection",
    "title": "The Truth Behind Groundhog Accuracy: A Data-Driven Study",
    "section": "\n1.3 Data collection",
    "text": "1.3 Data collection\nWe source our data from tidytuesday, which provides two csv files, one for groundhog characteristics including their name, longitude, latitude, type of groundhog, to name a few. The second csv is a prediction data set that has information on the predictions made by groundhogs. The corresponding variable between the two data sets is the id variable that identifies each groundhog and can allow for us to merge the two data sets. It is important to note that the authors attempted to provide weather data to accompany this dataset, but have been unsuccessful so far. We explore additional weather data ourselves to supplement the tidytuesday data. The weather data is sourced from the National Centers for Environmental Information. With the weather data we will be able to determine the accuracy of the predictions.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Report</span>"
    ]
  },
  {
    "objectID": "index.html#data-preparation",
    "href": "index.html#data-preparation",
    "title": "The Truth Behind Groundhog Accuracy: A Data-Driven Study",
    "section": "\n1.4 Data preparation",
    "text": "1.4 Data preparation\nThe data wrangling process involved merging the groundhog data set to the prediction data set using the id variable. We noted that the different regions have different weather patterns hence predictions which added a lot of noise in the data. To deal with this we decided to filter our data to one specific state, mainly Pennsylvania. The main reason for choosing this state is because it had the most observations, which would provide us more details in our analysis. Once we had merged and filtered the data set, the next step was to add the weather data that would be used to compare with groundhog predictions. We used the year variable which presents values of the average temperature for that year in the weather data and is the prediction year for the groundhogs data for the year period from 1998 to 2023. We then produced a final groundhogs prediction data set that incorporates actual weather data for each year.\n\nlibrary(tidyverse)\nlibrary(viridis)\nlibrary(readr)\n\ngroundhogs &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-01-30/groundhogs.csv')\n\nRows: 75 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (11): slug, shortname, name, city, region, country, source, current_pred...\ndbl  (4): id, latitude, longitude, predictions_count\nlgl  (2): is_groundhog, active\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npredictions &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-01-30/predictions.csv')\n\nRows: 1462 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): details\ndbl (2): id, year\nlgl (1): shadow\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ngroundhogs_all &lt;- predictions |&gt; \n   left_join(groundhogs, join_by(id==id)) |&gt; \n  filter(region == \"Pennsylvania\")\n\nActual_weather &lt;- read_csv(\"data/data.csv\", skip = 3)\n\nRows: 130 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (2): Date, Value\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nActual_weather &lt;- Actual_weather |&gt; \n  mutate(year = as.numeric (str_sub(Date, 1,4)))\n\ngroundhogs_final &lt;- groundhogs_all|&gt; \n  left_join(Actual_weather, join_by(year == year))\n\ngroundhogs_final &lt;- groundhogs_final %&gt;%\n  mutate(earlyspring = Value &gt;= 37) |&gt; \n  mutate(accuracy = shadow != earlyspring) |&gt;\n  mutate(type = str_replace(type, \"Taxidermied groundhogs\", \"Taxidermied groundhog\")) |&gt; \n  filter(!is.na(accuracy))",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Report</span>"
    ]
  },
  {
    "objectID": "index.html#data-visualization-and-analysis",
    "href": "index.html#data-visualization-and-analysis",
    "title": "The Truth Behind Groundhog Accuracy: A Data-Driven Study",
    "section": "\n1.5 Data visualization and Analysis",
    "text": "1.5 Data visualization and Analysis\nThe next stage is analyzing the data and we make several visualizations to explore our research question. The first visualization explores the accuracy of groundhog predictions by type of groundhog. This is a stacked bar graph with the x axis being groundhog accuracy (true or false) which determines if the groundhog was right or wrong in its predictions, and the y axis being the count of predictions. The bar graph indicates that overall groundhogs are slightly more accurate than not, with more true counts than false counts.\n\nggplot(groundhogs_final, aes(x = accuracy, fill = type)) +\n  geom_bar()+\n  scale_fill_manual(\"Type of Groundhog\", values = viridis(5)) +\n  labs(x = \"Groundhog Accuracy\", y = \"Count Predictions\", title = \"Accuracy of Groundhog Predictions\", caption = \"Data from groundhog-day.com and NOAR\", alt = \"Bar Graph of ground hog prediction acuracy by type of goundhog. Groundhogs are more accurate than not, but not by much\") +\n  theme_bw()\n\n\n\n\n\n\n\nThe next visualization is a stacked bar graph that looks at the proportion of accurate predictions by groundhog types. The y axis is the groundhog type and the y axis is the percent of predictions that are true and those that are false, coded by color. Groundhog puppets are the most accurate (over 75%), while real groundhogs are some of the least (around 50%).\n\nggplot(groundhogs_final, aes(y = type, fill = accuracy)) +\n  geom_bar(position = \"fill\", color = \"white\")+\n  scale_fill_manual(\"Groundhog Accuracy\", values = viridis(2)) +\n  labs(x = \"Percent of Predictions\", y = \"Type of Groundhog\", title = \"Proportion of Acurate Groundhog Predictions by Type\", caption = \"Data from groundhog-day.com and NOAR\") +\n  theme_bw()\n\n\n\n\n\n\n\nWe also analyse accuracy by temperature overtime using a scatter plot. The x axis is the year of prediction and the y axis is the average temperature. The points are grouped by true or false which essentially measures the accuracy of the groundhog. Additionally we select a line that represents the early spring cut off, defined by the temperature where frost stops forming (37°f). The results show that groundhogs are more accurate at predicting more winter than early spring.\n\nggplot(groundhogs_final, aes(x = year, y = Value, color = accuracy)) +\n  geom_point() +\n  scale_color_manual(\"Groundhog Accuracy\", values = viridis(2)) +\n  labs(x = \"Year of Prediction\", y = \"Average Temperature\", title = \"Prediction Acuracy by Temperature Over Time\", caption = \"Data from groundhog-day.com and NOAR\") +\n  geom_hline(yintercept = 37, color = \"red\", linetype = \"dashed\") +\n  theme_bw()\n\n\n\n\n\n\n\nThe final visualization is a leaflet map that shows the distribution of the different groundhog types. This is an interactive leaflet map that allows the reader to zoom in and out. We have coded the map to be an html file. The leaflet map shows that the majority of groundhogs are located in Southeast Pennsylvania, however the outliers are more often real Groundhogs.\n\nlibrary(mosaic)\n\n#Tribble dataset\n\ngroundhog_location &lt;- tribble(\n  ~name, ~longitude, ~latitude, ~type,\n  \"Punxsutawney Phil\",-78.96225, 40.9312, \"Groundhog\", \n  \"Octoraro Orphie\", -76.09196, 39.82554, \"Taxidermied groundhog\",\n  \"Schnogadahl Sammi\",-75.49787, 40.90142, \"Taxidermied groundhog\",\n  \"Poor Richard\", -76.72926, 39.96586, \"Taxidermied groundhog\",\n  \"Uni the Groundhog\", -76.29992, 40.41813, \"Taxidermied groundhog\",\n  \"Grover and Sue\", -76.36766, 40.57162, \"Taxidermied groundhog\",\n  \"Dover Doug\", -76.85717, 39.99791, \"Person in a groundhog suit\",\n  \"Lawrenceville Lucy\", -77.20171, 41.97356, \"Groundhog\",\n  \"Mount Joy Minnie\", -76.50431, 40.10912, \"Plush groundhog\",\n  \"Patty Pagoda\", -75.90783, 40.33607, \"Person in a groundhog suit\",\n  \"Tinicum Tim\", -75.25721, 39.89215, \"Groundhog puppet\",\n  \"Harleysville Hank\", -75.38234, 40.29050, \"Plush groundhog\",\n  \"Mount Gretna Grady\", -76.46776, 40.24677, \"Plush groundhog\",\n  \"Poppy the Groundhog\", -76.66445, 40.12133, \"Groundhog\",\n  \"MT Parker\", -76.30730, 40.05880, \"Plush groundhog\"\n)\n\nlibrary(gplots)\nlibrary(leaflet)\nlibrary(htmlwidgets)\n\n\n#Map\nleaflet(data = groundhog_location) |&gt;\n  addTiles() |&gt;\n  addCircles(color = ~colorFactor(c(\"darkred\",\"darkgreen\",\"red\",\"darkblue\",\"orange\"), domain= groundhog_location$type)(type), label = groundhog_location$name) |&gt;\n   addLegend(position = \"bottomright\",\n            colors = c(\"darkred\",\"darkgreen\",\"red\",\"darkblue\",\"orange\"), labels = c(\"Groundhog\",\"Groundhog Puppet\", \"Person in a groundhog suit\", \"Plush groundhog\",\"Taxidermied groundhog\"), title =\"Legend\")\n\nAssuming \"longitude\" and \"latitude\" are longitude and latitude, respectively\n\n\n\n\n\n#filtered data\n\ngroundhogs_penn &lt;- groundhogs_all |&gt; \n  filter(region == \"Pennsylvania\")",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Report</span>"
    ]
  },
  {
    "objectID": "index.html#what-is-the-story-here",
    "href": "index.html#what-is-the-story-here",
    "title": "The Truth Behind Groundhog Accuracy: A Data-Driven Study",
    "section": "\n1.6 What is the story here?",
    "text": "1.6 What is the story here?\nGroundhog predictions have an almost 50% chance of being correct and in most cases they are good at predicting winter. Since there are so many different types of groundhogs, real groundhogs are not the only animal type we consider. Through data analysis and data visualization, we found that Groundhogs are generally 50% accurate in their predictions. This varies slightly based on type with groundhog puppets and groundhog plushies being slightly more accurate.These results give a valid value to the holiday that will continue to play a significant role in many communities.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Report</span>"
    ]
  },
  {
    "objectID": "src/et/zeke-f.html",
    "href": "src/et/zeke-f.html",
    "title": "2  teamwork-zeke",
    "section": "",
    "text": "2.1 Teamwork Summary\nArticle: https://www.indeed.com/career-advice/career-development/good-teamwork",
    "crumbs": [
      "Effective Team Work",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>teamwork-zeke</span>"
    ]
  },
  {
    "objectID": "src/et/joey-g.html",
    "href": "src/et/joey-g.html",
    "title": "3  teamwork-joey",
    "section": "",
    "text": "3.1 Teamwork Article Summary\nhttps://hr.mit.edu/learning-topics/teams/articles/basics\nThere are several factors identified as key to a team’s success. They include:",
    "crumbs": [
      "Effective Team Work",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>teamwork-joey</span>"
    ]
  },
  {
    "objectID": "src/et/joey-g.html#teamwork-article-summary",
    "href": "src/et/joey-g.html#teamwork-article-summary",
    "title": "3  teamwork-joey",
    "section": "",
    "text": "Shared understanding of the team’s mission\nCommitment to the team’s goals\nClearly defined roles and responsibilities\nAgreed-upon ground rules\nAn established decision-making model\nEffective group process including commitment to open communication, mutual accountability and appropriate self-evaluation",
    "crumbs": [
      "Effective Team Work",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>teamwork-joey</span>"
    ]
  },
  {
    "objectID": "src/et/mayande-m.html",
    "href": "src/et/mayande-m.html",
    "title": "4  teamwork-mayande",
    "section": "",
    "text": "4.1 Title: Overview of the Research on Team Effectiveness\nThis article present a summary of literature on team effectiveness, highlighting findings on the key features that create challenges for team science. Team effectiveness is a team’s capacity to achieve its goals and objectives, which leads to improved outcomes for the team members as well as outcomes produced or influenced by the team. It discusses some background information to give key considerations that build teamwork,theoretical models frameworks. It presents an interesting concept called the Team processes which are the means by which team members marshal and coordinate their individual resources.These include:\nThe article also discusses interventions that have been found to influence team processes:\nSome key challenges taht effect the processes:",
    "crumbs": [
      "Effective Team Work",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>teamwork-mayande</span>"
    ]
  },
  {
    "objectID": "src/et/mayande-m.html#title-overview-of-the-research-on-team-effectiveness",
    "href": "src/et/mayande-m.html#title-overview-of-the-research-on-team-effectiveness",
    "title": "4  teamwork-mayande",
    "section": "",
    "text": "Cognitive Team Processes\nTeam Mental Models and Transactive Memory Cognitive Team Interaction\nTeam Climate\nPsychological Safety\nMotivational and Affective Team Processes - Team Cohesion, Team Efficacy, Team Conflict\nTeam Behavioral Processes - Team Process Competencies, Team Self-Regulation, Measuring Team Processes\n\n\n\nTeam Composition: Individual Inputs to Shape Team Processes\nProfessional Development to Shape Team Processes\nLeadership to Shape Team Processes\n\n\n\nDeep knowledge integration\nLarge science groups composed of sub-teams that may be misaligned with other subteams\nGeographic dispersion\nHigh task interdependence\nTime allocation and organization",
    "crumbs": [
      "Effective Team Work",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>teamwork-mayande</span>"
    ]
  },
  {
    "objectID": "src/eda/EDA-zeke.html",
    "href": "src/eda/EDA-zeke.html",
    "title": "\n5  EDA-zeke\n",
    "section": "",
    "text": "6 Loading Data\n\nCodegroundhogs &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-01-30/groundhogs.csv')\n\nRows: 75 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (11): slug, shortname, name, city, region, country, source, current_pred...\ndbl  (4): id, latitude, longitude, predictions_count\nlgl  (2): is_groundhog, active\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nCodepredictions &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-01-30/predictions.csv')\n\nRows: 1462 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): details\ndbl (2): id, year\nlgl (1): shadow\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nCodelibrary(\"dataReporter\")\n\n\n\nCodesummarize(predictions$shadow)\n\n$variableType\nVariable type: logical\n$countMissing\nNumber of missing obs.: 145 (9.92 %)\n$uniqueValues\nNumber of unique values: 2\n$centralValue\nMode: \"TRUE\"\n\nCodecheck(predictions$shadow)\n\n$NoChecksPerformed\nNo problems found.\n\n\n\nCodevisualize(predictions$year)\n\n\n\n\n\n\nCodevisualize(groundhogs$country)",
    "crumbs": [
      "EDA",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>EDA-zeke</span>"
    ]
  },
  {
    "objectID": "src/eda/EDA-joey.html",
    "href": "src/eda/EDA-joey.html",
    "title": "\n6  EDA-joey\n",
    "section": "",
    "text": "Codelibrary(janitor)\n\n\nAttaching package: 'janitor'\n\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\n\n\nCode# Load Data\ngroundhogs &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-01-30/groundhogs.csv')\n\nRows: 75 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (11): slug, shortname, name, city, region, country, source, current_pred...\ndbl  (4): id, latitude, longitude, predictions_count\nlgl  (2): is_groundhog, active\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nCodepredictions &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-01-30/predictions.csv')\n\nRows: 1462 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): details\ndbl (2): id, year\nlgl (1): shadow\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.",
    "crumbs": [
      "EDA",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>EDA-joey</span>"
    ]
  },
  {
    "objectID": "src/eda/EDA-mayande.html",
    "href": "src/eda/EDA-mayande.html",
    "title": "\n7  EDA-mayande\n",
    "section": "",
    "text": "Codelibrary(SmartEDA)\n\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n\n\n\nCodegroundhogs &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-01-30/groundhogs.csv')\n\nRows: 75 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (11): slug, shortname, name, city, region, country, source, current_pred...\ndbl  (4): id, latitude, longitude, predictions_count\nlgl  (2): is_groundhog, active\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nCodepredictions &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-01-30/predictions.csv')\n\nRows: 1462 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): details\ndbl (2): id, year\nlgl (1): shadow\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nCodeExpData(groundhogs, type = 1)\n\n                                          Descriptions       Value\n1                                   Sample size (nrow)          75\n2                              No. of variables (ncol)          17\n3                    No. of numeric/interger variables           4\n4                              No. of factor variables           0\n5                                No. of text variables          11\n6                             No. of logical variables           2\n7                          No. of identifier variables           5\n8                                No. of date variables           0\n9             No. of zero variance variables (uniform)           0\n10               %. of variables having complete cases 94.12% (16)\n11   %. of variables having &gt;0% and &lt;50% missing cases   5.88% (1)\n12 %. of variables having &gt;=50% and &lt;90% missing cases      0% (0)\n13          %. of variables having &gt;=90% missing cases      0% (0)\n\nCodeExpData(predictions, type = 1)\n\n                                          Descriptions   Value\n1                                   Sample size (nrow)    1462\n2                              No. of variables (ncol)       4\n3                    No. of numeric/interger variables       2\n4                              No. of factor variables       0\n5                                No. of text variables       1\n6                             No. of logical variables       1\n7                          No. of identifier variables       0\n8                                No. of date variables       0\n9             No. of zero variance variables (uniform)       0\n10               %. of variables having complete cases 50% (2)\n11   %. of variables having &gt;0% and &lt;50% missing cases 25% (1)\n12 %. of variables having &gt;=50% and &lt;90% missing cases 25% (1)\n13          %. of variables having &gt;=90% missing cases  0% (0)\n\n\n\nCodeExpCatViz(groundhogs, target = NULL)\n\n[[1]]",
    "crumbs": [
      "EDA",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>EDA-mayande</span>"
    ]
  },
  {
    "objectID": "src/workdocs/iwc-joey.html",
    "href": "src/workdocs/iwc-joey.html",
    "title": "\n8  iwc-joey\n",
    "section": "",
    "text": "Codelibrary(tidyverse)\nlibrary(viridis)\n\nLoading required package: viridisLite\n\nCodegroundhogs &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-01-30/groundhogs.csv')\n\nRows: 75 Columns: 17\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (11): slug, shortname, name, city, region, country, source, current_pred...\ndbl  (4): id, latitude, longitude, predictions_count\nlgl  (2): is_groundhog, active\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nCodepredictions &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-01-30/predictions.csv')\n\nRows: 1462 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): details\ndbl (2): id, year\nlgl (1): shadow\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nCodegroundhogs_all &lt;- predictions |&gt; \n   left_join(groundhogs, join_by(id==id)) |&gt; \n  filter(region == \"Pennsylvania\")\n\n\n\nCode# Read Weather Data \nlibrary(readr)\nActual_weather &lt;- read_csv(\"../../data/data.csv\", skip = 3)\n\nRows: 130 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (2): Date, Value\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nCode#61 data point &gt; 37 F (Early Spring) --- 69 data points &lt; 37 F (Late Winter)\nActual_weather|&gt;\n  arrange(desc(Value))\n\n# A tibble: 130 × 2\n     Date Value\n    &lt;dbl&gt; &lt;dbl&gt;\n 1 201204  43.2\n 2 192104  42.9\n 3 202404  42.7\n 4 201704  41.9\n 5 202304  41.8\n 6 199804  41.6\n 7 194504  41.4\n 8 197604  41.2\n 9 199004  41  \n10 200204  40.7\n# ℹ 120 more rows\n\n\n\nCodelibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\n\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\n\n\nAttaching package: 'mosaic'\n\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nCodegroundhog_location &lt;- tribble(\n  ~name, ~longitude, ~latitude, ~type,\n  \"Punxsutawney Phil\",-78.96225, 40.9312, \"Groundhog\", \n  \"Octoraro Orphie\", -76.09196, 39.82554, \"Taxidermied groundhog\",\n  \"Schnogadahl Sammi\",-75.49787, 40.90142, \"Taxidermied groundhog\",\n  \"Poor Richard\", -76.72926, 39.96586, \"Taxidermied groundhog\",\n  \"Uni the Groundhog\", -76.29992, 40.41813, \"Taxidermied groundhog\",\n  \"Grover and Sue\", -76.36766, 40.57162, \"Taxidermied groundhog\",\n  \"Dover Doug\", -76.85717, 39.99791, \"Person in a groundhog suit\",\n  \"Lawrenceville Lucy\", -77.20171, 41.97356, \"Groundhog\",\n  \"Mount Joy Minnie\", -76.50431, 40.10912, \"Plush groundhog\",\n  \"Patty Pagoda\", -75.90783, 40.33607, \"Person in a groundhog suit\",\n  \"Tinicum Tim\", -75.25721, 39.89215, \"Groundhog puppet\",\n  \"Harleysville Hank\", -75.38234, 40.29050, \"Plush groundhog\",\n  \"Mount Gretna Grady\", -76.46776, 40.24677, \"Plush groundhog\",\n  \"Poppy the Groundhog\", -76.66445, 40.12133, \"Groundhog\",\n  \"MT Parker\", -76.30730, 40.05880, \"Plush groundhog\"\n)\n\n\n\nCode# Load Packages\nlibrary(gplots)\n\n\nAttaching package: 'gplots'\n\n\nThe following object is masked from 'package:stats':\n\n    lowess\n\nCodelibrary(leaflet)\n\n\n\nCode#Map\nleaflet(data = groundhog_location) |&gt;\n  addTiles() |&gt;\n  addCircles(color = ~colorFactor(c(\"darkred\",\"darkgreen\",\"red\",\"darkblue\",\"orange\"), domain= groundhog_location$type)(type), label = groundhog_location$name) |&gt;\n   addLegend(position = \"bottomright\",\n            colors = c(\"darkred\",\"darkgreen\",\"red\",\"darkblue\",\"orange\"), labels = c(\"Groundhog\",\"Groundhog Puppet\", \"Person in a groundhog suit\", \"Plush groundhog\",\"Taxidermied groundhog\"), title =\"Legend\")\n\nAssuming \"longitude\" and \"latitude\" are longitude and latitude, respectively",
    "crumbs": [
      "Individual Work Docs",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>iwc-joey</span>"
    ]
  },
  {
    "objectID": "src/workdocs/iwc-zeke.html",
    "href": "src/workdocs/iwc-zeke.html",
    "title": "\n9  iwc-zeke\n",
    "section": "",
    "text": "Codelibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nCodelibrary(viridis)\n\nLoading required package: viridisLite\n\nCodegroundhogs &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-01-30/groundhogs.csv')\n\nRows: 75 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (11): slug, shortname, name, city, region, country, source, current_pred...\ndbl  (4): id, latitude, longitude, predictions_count\nlgl  (2): is_groundhog, active\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nCodepredictions &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-01-30/predictions.csv')\n\nRows: 1462 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): details\ndbl (2): id, year\nlgl (1): shadow\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nCodegroundhogs_all &lt;- predictions |&gt; \n   left_join(groundhogs, join_by(id==id)) |&gt; \n  filter(region == \"Pennsylvania\")\n\n\n\nCode# Read Weather Data \nlibrary(readr)\nActual_weather &lt;- read_csv(\"../../data/data.csv\", skip = 3)\n\nRows: 130 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (2): Date, Value\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nCodeActual_weather &lt;- Actual_weather |&gt; \n  mutate(year = as.numeric (str_sub(Date, 1,4)))\n\n\n\nCodegroundhogs_final &lt;- groundhogs_all|&gt; \n  left_join(Actual_weather, join_by(year == year)) |&gt; \n  select(year, Value, shadow, latitude, longitude, type)\n\n\n\nCodegroundhogs_final &lt;- groundhogs_final %&gt;%\n  mutate(earlyspring = Value &gt;= 37) |&gt; \n  mutate(accuracy = shadow != earlyspring) |&gt;\n  mutate(type = str_replace(type, \"Taxidermied groundhogs\", \"Taxidermied groundhog\")) |&gt; \n  filter(!is.na(accuracy))\n\n\n\nCodeggplot(groundhogs_final, aes(x = accuracy, fill = type)) +\n  geom_bar()+\n  facet_wrap(~earlyspring, labeller = as_labeller(c(\n    `TRUE` = \"Early Spring\",\n    `FALSE` = \"Winter\"\n  ))) +\n  scale_fill_manual(\"Type of Groundhog\", values = viridis(5)) +\n  labs(x = \"Groundhog Accuracy\", y = \"Count Predictions\", title = \"Accuracy of Groundhog Predictions\", caption = \"Data from groundhog-day.com and NOAR\", alt = \"Bar Graph of ground hog prediction acuracy by type of goundhog. Groundhogs are more accurate than not, but not by much\") +\n  theme_bw()\n\n\n\n\n\n\nCodeggplot(groundhogs_final, aes(y = type, fill = accuracy)) +\n  geom_bar(position = \"fill\", color = \"white\")+\n  scale_fill_manual(\"Groundhog Accuracy\", values = viridis(2)) +\n  labs(x = \"Type of Groundhog\", y = \"Percent of Predictions\", title = \"Proportion of Acurate Groundhog Predictions by Type\", caption = \"Data from groundhog-day.com and NOAR\") +\n  theme_bw()\n\n\n\n\n\n\nCodeggplot(groundhogs_final, aes(x = year, y = Value, color = accuracy)) +\n  geom_point() +\n  scale_color_manual(\"Groundhog Accuracy\", values = viridis(2)) +\n  labs(x = \"Year of Prediction\", y = \"Average Temperature\", title = \"Prediction Acuracy by Temperature Over Time\", caption = \"Data from groundhog-day.com and NOAR\") +\n  geom_hline(yintercept = 37, color = \"red\", linetype = \"dashed\") +\n  theme_bw()\n\n\n\n\n\n\nCodeggplot(Actual_weather, aes(x = year, y = Value)) +\n  geom_smooth()\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'",
    "crumbs": [
      "Individual Work Docs",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>iwc-zeke</span>"
    ]
  },
  {
    "objectID": "src/workdocs/iwc-mayande.html",
    "href": "src/workdocs/iwc-mayande.html",
    "title": "\n10  iwc-mayande\n",
    "section": "",
    "text": "Code# Option 2: Read directly from GitHub\ngroundhogs &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-01-30/groundhogs.csv')\n\nRows: 75 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (11): slug, shortname, name, city, region, country, source, current_pred...\ndbl  (4): id, latitude, longitude, predictions_count\nlgl  (2): is_groundhog, active\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nCodepredictions &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-01-30/predictions.csv')\n\nRows: 1462 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): details\ndbl (2): id, year\nlgl (1): shadow\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nCodelibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nCodelibrary(viridis)\n\nLoading required package: viridisLite\n\nCodegroundhogs &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-01-30/groundhogs.csv')\n\nRows: 75 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (11): slug, shortname, name, city, region, country, source, current_pred...\ndbl  (4): id, latitude, longitude, predictions_count\nlgl  (2): is_groundhog, active\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nCodepredictions &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-01-30/predictions.csv')\n\nRows: 1462 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): details\ndbl (2): id, year\nlgl (1): shadow\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nCodegroundhogs_all &lt;- predictions |&gt; \n   left_join(groundhogs, join_by(id==id)) |&gt; \n  filter(region == \"Pennsylvania\")\n\n\n\nCode# Read Weather Data \nlibrary(readr)\nActual_weather &lt;- read_csv(\"../../data/data.csv\", skip = 3)\n\nRows: 130 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (2): Date, Value\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nCodeActual_weather &lt;- Actual_weather |&gt; \n  mutate(year = as.numeric (str_sub(Date, 1,4)))\n\n\n\nCodegroundhogs_final &lt;- groundhogs_all|&gt; \n  left_join(Actual_weather, join_by(year == year))\n\n\n\nCodegroundhogs_final &lt;- groundhogs_final %&gt;%\n  mutate(earlyspring = Value &gt;= 37) |&gt; \n  mutate(accuracy = shadow != earlyspring) |&gt;\n  mutate(type = str_replace(type, \"Taxidermied groundhogs\", \"Taxidermied groundhog\")) |&gt; \n  filter(!is.na(accuracy))\n\n\n\nCodeggplot(groundhogs_final, aes(x = accuracy, fill = type)) +\n  geom_bar()+\n  scale_fill_manual(\"Type of Groundhog\", values = viridis(5)) +\n  labs(x = \"Groundhog Accuracy\", y = \"Count Predictions\", title = \"Accuracy of Groundhog Predictions\", caption = \"Data from groundhog-day.com and NOAR\", alt = \"Bar Graph of ground hog prediction acuracy by type of goundhog. Groundhogs are more accurate than not, but not by much\") +\n  theme_bw()\n\n\n\n\n\n\nCodeggplot(groundhogs_final, aes(x = type, fill = accuracy)) +\n  geom_bar(position = \"fill\", color = \"white\")+\n  scale_fill_manual(\"Groundhog Accuracy\", values = viridis(2)) +\n  labs(x = \"Type of Groundhog\", y = \"Percent of Predictions\", title = \"Proportion of Acurate Groundhog Predictions by Type\", caption = \"Data from groundhog-day.com and NOAR\") +\n  theme_bw() +\n  theme(\n    axis.text.x = element_text(angle = 15, hjust = 1)\n  )\n\n\n\n\n\n\nCodeggplot(groundhogs_final, aes(x = year, y = Value, color = accuracy)) +\n  geom_point() +\n  scale_color_manual(\"Groundhog Accuracy\", values = viridis(2)) +\n  labs(x = \"Year of Prediction\", y = \"Average Temperature\", title = \"Prediction Acuracy by Temperature Over Time\", caption = \"Data from groundhog-day.com and NOAR\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n11 Map of Groundhogs in Pennsylvania\n\nCodelibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\n\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\n\n\nAttaching package: 'mosaic'\n\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nCode#Tribble dataset\n\ngroundhog_location &lt;- tribble(\n  ~name, ~longitude, ~latitude, ~type,\n  \"Punxsutawney Phil\",-78.96225, 40.9312, \"Groundhog\", \n  \"Octoraro Orphie\", -76.09196, 39.82554, \"Taxidermied groundhog\",\n  \"Schnogadahl Sammi\",-75.49787, 40.90142, \"Taxidermied groundhog\",\n  \"Poor Richard\", -76.72926, 39.96586, \"Taxidermied groundhog\",\n  \"Uni the Groundhog\", -76.29992, 40.41813, \"Taxidermied groundhog\",\n  \"Grover and Sue\", -76.36766, 40.57162, \"Taxidermied groundhog\",\n  \"Dover Doug\", -76.85717, 39.99791, \"Person in a groundhog suit\",\n  \"Lawrenceville Lucy\", -77.20171, 41.97356, \"Groundhog\",\n  \"Mount Joy Minnie\", -76.50431, 40.10912, \"Plush groundhog\",\n  \"Patty Pagoda\", -75.90783, 40.33607, \"Person in a groundhog suit\",\n  \"Tinicum Tim\", -75.25721, 39.89215, \"Groundhog puppet\",\n  \"Harleysville Hank\", -75.38234, 40.29050, \"Plush groundhog\",\n  \"Mount Gretna Grady\", -76.46776, 40.24677, \"Plush groundhog\",\n  \"Poppy the Groundhog\", -76.66445, 40.12133, \"Groundhog\",\n  \"MT Parker\", -76.30730, 40.05880, \"Plush groundhog\"\n)\n\n\n\nCode# Load Packages\nlibrary(gplots)\n\n\nAttaching package: 'gplots'\n\n\nThe following object is masked from 'package:stats':\n\n    lowess\n\nCodelibrary(leaflet)\nlibrary(htmlwidgets)\n\n\n#Map\ngroundhog_map &lt;- leaflet(data = groundhog_location) |&gt;\n  addTiles() |&gt;\n  addCircles(color = ~colorFactor(c(\"darkred\",\"darkgreen\",\"red\",\"darkblue\",\"orange\"), domain= groundhog_location$type)(type), label = groundhog_location$name) |&gt;\n   addLegend(position = \"bottomright\",\n            colors = c(\"darkred\",\"darkgreen\",\"red\",\"darkblue\",\"orange\"), labels = c(\"Groundhog\",\"Groundhog Puppet\", \"Person in a groundhog suit\", \"Plush groundhog\",\"Taxidermied groundhog\"), title =\"Type\")\n\nAssuming \"longitude\" and \"latitude\" are longitude and latitude, respectively\n\nCodesaveWidget(groundhog_map, file = \"groundhog_map.html\")",
    "crumbs": [
      "Individual Work Docs",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>iwc-mayande</span>"
    ]
  },
  {
    "objectID": "src/appx/proposal.html",
    "href": "src/appx/proposal.html",
    "title": "Appendix A — Proposal",
    "section": "",
    "text": "Title: a title: The Truth Behind Groundhog Accuracy: A Data-Driven Study\nNames: Joey Gebin, Zeke Friendly, Mayande Mamba\nShort description of the project: We will explore the last 130 years of groundhog predictions, analyzing how correct they were about winter/spring, how often do groundhogs agree, and whether factors (like location) might affect the accuracy of their predictions. We also are interested in exploring which is more accurate between groundhog and non groundhog predictions\nThe reasons/inspirations behind choosing this project: We are curious to explore how effective groundhog prediction actually and what are some key identifiable patterns of the predictions\nImplementation and responsibility plan: - Deliverables: - Group/ Project Information submission - Effective Teamwork Reading Summary - Combine data sets (and add weather outcomes)(filter out Canada observations)",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Proposal</span>"
    ]
  },
  {
    "objectID": "src/appx/case-study.html",
    "href": "src/appx/case-study.html",
    "title": "Appendix B — Case Study",
    "section": "",
    "text": "Your case study will go here.\nCase Study: Uber Is Taking Millions Of Manhattan Rides Away From Taxis\nObservations: The visualizations use in the article are effective. The first graph shows the changes in NYC pickups by Uber compared to yellow cabs, green cabs. We can clearly compare this behavior and infer how each transport type has done over time relative to each other. According tho the article’s graph we can now compare the April-to-June period in each year. Uber pickups in New York City rose sharply over this time span — no surprise, as the company was aggressively entering the market. Green cabs (which pick up passengers in the outer boroughs and in northern Manhattan) saw an uptick, while yellow cab pickups declined, according to ride data.\nThe second graph shows a set of chloropleth maps that show the net change in total, taxi, and Uber pickups from April-June 2014 to April-June 2015.Zones marked in blue experienced a net decrease in pickups, while red zones saw a net increase. Through this use of color and gradient, we can see how each type of service has changed in total over the area of research. According to the article we can infer that “Both taxis and Ubers increased their pickups in Brooklyn and Queens, particularly in gentrifying areas; the services are supplementing each other in these neighborhoods. Uber also gained in Staten Island and the Bronx, while taxi pickups were flat in those boroughs. In Manhattan’s core the area outlined on the maps, where green cabs aren’t allowed to make pickups”. Overall, the maps have titles, effective use of color and gradient that is inclusive. There are additional labels that help inform the information on the graphs.\nThe article also has used a table to supplement the visualization. We are able to see the numbers aligning with the behavior we see on the map.\nThe last visualization is a linear plot (line of best fit), with bubble plots showing how Uber is replacing cabs in Manhattan. It shows the change in taxi pickups compared to Uber pickups by taxi zone in borough’s core. This visualization uses shape and size to help present the information.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Case Study</span>"
    ]
  },
  {
    "objectID": "src/appx/Group-project.html",
    "href": "src/appx/Group-project.html",
    "title": "Appendix C — Option 2: Read directly from GitHub",
    "section": "",
    "text": "ins— title: “Group-project” format: html\n\n\nCodegroundhogs &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-01-30/groundhogs.csv')\n\nRows: 75 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (11): slug, shortname, name, city, region, country, source, current_pred...\ndbl  (4): id, latitude, longitude, predictions_count\nlgl  (2): is_groundhog, active\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nCodepredictions &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-01-30/predictions.csv')\n\nRows: 1462 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): details\ndbl (2): id, year\nlgl (1): shadow\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nCodelibrary(tidyverse)\nlibrary(viridis)\n\nLoading required package: viridisLite\n\nCodegroundhogs &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-01-30/groundhogs.csv')\n\nRows: 75 Columns: 17\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (11): slug, shortname, name, city, region, country, source, current_pred...\ndbl  (4): id, latitude, longitude, predictions_count\nlgl  (2): is_groundhog, active\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nCodepredictions &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-01-30/predictions.csv')\n\nRows: 1462 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): details\ndbl (2): id, year\nlgl (1): shadow\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nCodegroundhogs_all &lt;- predictions |&gt; \n   left_join(groundhogs, join_by(id==id)) |&gt; \n  filter(region == \"Pennsylvania\")\n\n\n\nCode# Read Weather Data \nlibrary(readr)\nActual_weather &lt;- read_csv(\"../../data/data.csv\", skip = 3)\n\nRows: 130 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (2): Date, Value\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nCodeActual_weather &lt;- Actual_weather |&gt; \n  mutate(year = as.numeric (str_sub(Date, 1,4)))\n\n\n\nCodegroundhogs_final &lt;- groundhogs_all|&gt; \n  left_join(Actual_weather, join_by(year == year))\n\n\n\nCodegroundhogs_final &lt;- groundhogs_final %&gt;%\n  mutate(earlyspring = Value &gt;= 37) |&gt; \n  mutate(accuracy = shadow != earlyspring) |&gt;\n  mutate(type = str_replace(type, \"Taxidermied groundhogs\", \"Taxidermied groundhog\")) |&gt; \n  filter(!is.na(accuracy))\n\n\n\nCodeggplot(groundhogs_final, aes(x = accuracy, fill = type)) +\n  geom_bar()+\n  scale_fill_manual(\"Type of Groundhog\", values = viridis(5)) +\n  labs(x = \"Groundhog Accuracy\", y = \"Count Predictions\", title = \"Accuracy of Groundhog Predictions\", caption = \"Data from groundhog-day.com and NOAR\", alt = \"Bar Graph of ground hog prediction acuracy by type of goundhog. Groundhogs are more accurate than not, but not by much\") +\n  theme_bw()\n\n\n\n\n\n\nCodeggplot(groundhogs_final, aes(x = accuracy, fill = type)) +\n  geom_bar()+\n  facet_wrap(~earlyspring, labeller = as_labeller(c(\n    `TRUE` = \"Early Spring\",\n    `FALSE` = \"Winter\"\n  ))) +\n  scale_fill_manual(\"Type of Groundhog\", values = viridis(5)) +\n  labs(x = \"Groundhog Accuracy\", y = \"Count Predictions\", title = \"Accuracy of Groundhog Predictions\", caption = \"Data from groundhog-day.com and NOAR\", alt = \"Bar Graph of ground hog prediction acuracy by type of goundhog. Groundhogs are more accurate than not, but not by much\") +\n  theme_bw()\n\n\n\n\n\n\nCodeggplot(groundhogs_final, aes(y = type, fill = accuracy)) +\n  geom_bar(position = \"fill\", color = \"white\")+\n  scale_fill_manual(\"Groundhog Accuracy\", values = viridis(2)) +\n  labs(x = \"Percent of Predictions\", y = \"Type of Groundhog\", title = \"Proportion of Acurate Groundhog Predictions by Type\", caption = \"Data from groundhog-day.com and NOAR\") +\n  theme_bw()\n\n\n\n\n\n\nCodeggplot(groundhogs_final, aes(x = year, y = Value, color = accuracy)) +\n  geom_point() +\n  scale_color_manual(\"Groundhog Accuracy\", values = viridis(2)) +\n  labs(x = \"Year of Prediction\", y = \"Average Temperature\", title = \"Prediction Acuracy by Temperature Over Time\", caption = \"Data from groundhog-day.com and NOAR\") +\n  geom_hline(yintercept = 37, color = \"red\", linetype = \"dashed\") +\n  theme_bw()\n\n\n\n\n\n\n\n\nD Map of Groundhogs in Pennsylvania\n\nCodelibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\n\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\n\n\nAttaching package: 'mosaic'\n\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nCode#Tribble dataset\n\ngroundhog_location &lt;- tribble(\n  ~name, ~longitude, ~latitude, ~type,\n  \"Punxsutawney Phil\",-78.96225, 40.9312, \"Groundhog\", \n  \"Octoraro Orphie\", -76.09196, 39.82554, \"Taxidermied groundhog\",\n  \"Schnogadahl Sammi\",-75.49787, 40.90142, \"Taxidermied groundhog\",\n  \"Poor Richard\", -76.72926, 39.96586, \"Taxidermied groundhog\",\n  \"Uni the Groundhog\", -76.29992, 40.41813, \"Taxidermied groundhog\",\n  \"Grover and Sue\", -76.36766, 40.57162, \"Taxidermied groundhog\",\n  \"Dover Doug\", -76.85717, 39.99791, \"Person in a groundhog suit\",\n  \"Lawrenceville Lucy\", -77.20171, 41.97356, \"Groundhog\",\n  \"Mount Joy Minnie\", -76.50431, 40.10912, \"Plush groundhog\",\n  \"Patty Pagoda\", -75.90783, 40.33607, \"Person in a groundhog suit\",\n  \"Tinicum Tim\", -75.25721, 39.89215, \"Groundhog puppet\",\n  \"Harleysville Hank\", -75.38234, 40.29050, \"Plush groundhog\",\n  \"Mount Gretna Grady\", -76.46776, 40.24677, \"Plush groundhog\",\n  \"Poppy the Groundhog\", -76.66445, 40.12133, \"Groundhog\",\n  \"MT Parker\", -76.30730, 40.05880, \"Plush groundhog\"\n)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gplots)\nlibrary(leaflet)\nlibrary(htmlwidgets)\n\n\n#Map\ngroundhog_map &lt;- leaflet(data = groundhog_location) |&gt;\n  addTiles() |&gt;\n  addCircles(color = ~colorFactor(c(\"darkred\",\"darkgreen\",\"red\",\"darkblue\",\"orange\"), domain= groundhog_location$type)(type), label = groundhog_location$name) |&gt;\n   addLegend(position = \"bottomright\",\n            colors = c(\"darkred\",\"darkgreen\",\"red\",\"darkblue\",\"orange\"), labels = c(\"Groundhog\",\"Groundhog Puppet\", \"Person in a groundhog suit\", \"Plush groundhog\",\"Taxidermied groundhog\"), title =\"Type\")\n\nAssuming \"longitude\" and \"latitude\" are longitude and latitude, respectively\n\nCodesaveWidget(groundhog_map, file = \"groundhog_map.html\")\n:::\n\nCode#filtered data\n\ngroundhogs_penn &lt;- groundhogs_all |&gt; \n  filter(region == \"Pennsylvania\")",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>C</span>  <span class='chapter-title'>format: html</span>"
    ]
  }
]